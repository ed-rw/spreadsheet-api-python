name: Master-Pipeline

on:
    push:
        branches:
            - master

jobs:
    test-inmemory:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8
            - name: Install Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install pipenv
                cd src/spreadsheetapi
                pipenv install --deploy --ignore-pipfile
            - name: Run the spreadsheet API
              # NOTE: Using 0.0.0.0 as the host is not ideal here (security
              # risk, question - what firewall rules does github have setup for
              # these VMs?), but in order for the spreadsheet-api-tests
              # container to have access to this service this is the simplest
              # solution for now. If github actions supports setting network
              # mode = host for the action or if the service here is updated to
              # run as a container on the default bridge network this would be
              # more secure.
              run: |
                cd src/spreadsheetapi/service
                pipenv run uvicorn application:app --host 0.0.0.0 --port 8000 &> /dev/null &
              env:
                  BACKEND: InMemory
            - uses: ed-rw/spreadsheet-api-tests@master
              with:
                  service-base-url: http://172.17.0.1:8000
    test-sqlite:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8
            - name: Install Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install pipenv
                cd src/spreadsheetapi
                pipenv sync
            - name: Run the spreadsheet API
              # NOTE: Same issue noted above
              run: |
                cd src/spreadsheetapi/service
                mkdir .db
                pipenv run uvicorn application:app --host 0.0.0.0 --port 8000 &> /dev/null &
              env:
                  BACKEND: SQLite
            - uses: ed-rw/spreadsheet-api-tests@master
              with:
                  service-base-url: http://172.17.0.1:8000
    update-app-platform:
        needs: [test-inmemory, test-sqlite]

        runs-on: ubuntu-latest

        outputs:
            app_platform_id: ${{steps.get_app_platform_id.outputs.app_platform_id}}

        steps:
            - uses: actions/checkout@v2
            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: 0.14.7
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
            - name: TF init, format check and validate
              run: |
                cd terraform
                terraform init
                terraform fmt -check
                terraform validate
            - name: TF apply
              run: cd terraform && terraform apply -auto-approve
            - name: Output App Platorm Id
              id: get_app_platform_id
              run: cd terraform && echo "::set-output name=app_platform_id::$(terraform output app_platform_id)"
    deploy-to-app-platform:
        needs: update-app-platform

        runs-on: ubuntu-latest

        steps:
            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            - name: Initiate deployment
              run: doctl app create-deployment ${{needs.update-app-platform.outputs.app_platform_id}}
